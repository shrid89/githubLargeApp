
 "use strict";
/**
* @Easy and simple way of communication between Jira with nodeJS
* @author Aloha
*/

/**
* require modules needed
*/

var request = require("request");

/**
 * Create node Jira instance
 * @param {type} username,password,subdomain
 * @returns {Jira}
 */

function nodeJira(username,password,subDomain) {
  return new Jira(username,password,subDomain);
}

/**
 * Create and validate Jira
 * @param {type} username,password,subdomain
 */

function Jira(username,password,subDomain) {
  Jira.username = username;
  Jira.password = password;
  Jira.subDomain = subDomain;
}


Jira.prototype.validateJiraUsernamePassword = function (params,callback) {
  sendRequest(callback,"/project",params);
}

Jira.prototype.getJiraProjectList = function (params,callback) {
  sendRequest(callback,"/project",params);
}

Jira.prototype.getJiraIssueList = function (params,callback) {
  sendRequest(callback,"/search?jql=project="+params.projectId,params);
}

Jira.prototype.getJiraIssue = function (params,callback) {
  sendRequest(callback,"/issue/"+params.issueId,params);
}

Jira.prototype.getJiraIssueComments = function (params,callback) {
  sendRequest(callback,"/issue/"+params.issueId+"/comment",params);
}

Jira.prototype.createJiraIssue = function (params,callback) {
  sendPostRequest(callback,"/issue",params);
}

Jira.prototype.createJiraComment = function (params,callback) {
  sendPostRequest(callback,"/issue/"+params.issueId+"/comment?expand",params);
}

Jira.prototype.createJiraComponant = function (params,callback) {
  sendPostRequest(callback,"/component",params);
}

function sendRequest(callback,url,params) {
  request.get({
    url : "https://"+params.subDomain+".atlassian.net/rest/api/2"+url,
    headers : {"Authorization" : "Basic " + new Buffer(params.userName + ":" + params.password).toString("base64")}
  },processResponse.bind(null,callback))
}

function sendPostRequest(callback,url,params) {;
  request.post({
    url : "https://"+params.subDomain+".atlassian.net/rest/api/2"+url,
    json:params.formdata,
    headers : {"Authorization" : "Basic " + new Buffer(params.userName + ":" + params.password).toString("base64")}
  },processResponse.bind(null,callback))
}

function processResponse(callback,error, response, data) {
  console.log(response.statusCode);
  console.log(data)
  if(!error && (response.statusCode == 200||response.statusCode == 201) ) {
    if(typeof data != "object"){
      data = JSON.parse(data);
    }
    callback({statusCode:0, data:data});
    return;
  }else if(error != null && typeof(error) != 'undefined'){
     callback({statusCode:100, errorMessage:error});
  }else if(typeof (data) != "undefined" && data!=null ){
      if(typeof data != "object"){
         data = JSON.parse(data);
      }
      if(typeof (data.errors) != "undefined" && data.errors!=null){
        callback({statusCode:100, errorMessage:data.errors});  
      }else if(typeof (data.errorMessages) != "undefined" && data.errorMessages!=null){
        callback({statusCode:100, errorMessage:data.errorMessages});  
      }else{
        callback({statusCode:100, errorMessage:null});  
      }
      
  }else{
    callback({statusCode:100, errorMessage:null});
  }
}
/**
* Expose to the world
* @namespace nodeJira
*/

 module.exports.nodeJira = nodeJira
