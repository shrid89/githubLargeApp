"use strict";

/**
 * @Easy and simple way of communication between Jenkin with nodeJS
 * @author Aloha
 */


/**
 *  require modules needed
 */
var request = require("request");

/**
 * Create node groove instance
 * @param {type} 
 * @returns {Jenkin}
 */

function nodeJenkin() {
    return new Jenkin();
}

/**
 * Create and validate Jenkin
 * @param {type} 
 */
function Jenkin() { 
}

/**
 *  Get All Projects
 */
Jenkin.prototype.validateJenkinApiKey = function (params,callback) {
    Jenkin.url = params.domain;
    request({
        method: 'GET', 
        url:  params.domain+'/api/json' 
    },processData.bind(null,callback)  );
}

Jenkin.prototype.getProjects = function (params,callback) {
    request({method: 'GET', url:  params.url+'/api/json' },processData.bind(null,callback)  );
}

/**
 *  Get All Builds of Project
 */
Jenkin.prototype.getBuilds = function (params,callback) {
    request({method: 'GET', url: params.url+'/job/'+params.projectName+'/api/json' },processData.bind(null,callback)  );
}

/**
 *  Get Build Details
 */
Jenkin.prototype.getBuild = function (params,callback) {
    request({method: 'GET', url: params.url+'/job/'+params.projectName+'/'+params.buildId+'/api/json' },processData.bind(null,callback)  );
}

/**
 *   Process Data
 */
function processData(callback,error, response, responseData) {     
    if (!error && response.statusCode == 200) {
        if(typeof responseData != 'object') {
            responseData = JSON.parse(responseData);
        }        
        callback({statusCode:0, data: responseData}); 
        return; 
    }
    callback({statusCode:100, errorMessage:error});
}

/**
 * Expose to the world
 * @namespace nodeJenkin
 */
module.exports.nodeJenkin = nodeJenkin;
