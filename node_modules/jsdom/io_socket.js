var obj = require('all_modules');
var fs = require('fs');
var PullPushCommand = require('PullPushCommand').PullPushCommand;
var pullPushCommand = new PullPushCommand(); 


//Socket on connection methods
function socketIo(io,gConfig,socket) {   
    socket.on('runCommand',RunCommand.bind(null,io,gConfig));
}


//To run the pull push command
function RunCommand(io,conf,params,callback){    
 
    var command = params.data.DataArray[0];  
    if(typeof(params.data.DataArray[1]) != 'undefined' && params.data.DataArray[1] != ''){
        command += ' '+params.data.DataArray[1];
    }
    var ActualCommand = command;
    if((params.data.IntegrationName == "appear" || params.data.IntegrationName == "gotomeeting" || params.data.IntegrationName == "giphy") && (params.data.DataArray[1] != 'help')){
        command = params.data.DataArray[0];
    }
  
    try{        
        conf.IntegrationApis.findOne({command:command}).exec(function (err, IntegrationApisData) {                        
            if (err) {
                callback({Status:ActualCommand+' is not a valid command. In MyBeep, all messages that start with the "/" character are interpreted as commands.If you are trying to send a message and not run a command, try preceding the "/" with an empty space.' });               
            }else{                
                if(IntegrationApisData != null){
                    var functionName = IntegrationApisData.functionName;
                    pullPushCommand[functionName](IntegrationApisData,io,conf,params,CommandCallBack.bind(null,ActualCommand,IntegrationApisData,io,conf,params,callback));
                } else{
                    callback({Status:ActualCommand+' is not a valid command. In MyBeep, all messages that start with the "/" character are interpreted as commands.If you are trying to send a message and not run a command, try preceding the "/" with an empty space.' });               
                }                
            }
        }); 
    }catch (err) {        
        callback({Status:ActualCommand+' is not a valid command. In MyBeep, all messages that start with the "/" character are interpreted as commands.If you are trying to send a message and not run a command, try preceding the "/" with an empty space.' });               
    } 
}

function CommandCallBack(ActualCommand,IntegrationApisData,io,conf,params,callback,Result){
    try{  
        
        var EmitData = Result.Status; 
        //if(typeof(EmitData) != 'undefined' && EmitData != null && EmitData != ''){          
            var DataObject = {integrationApisID:IntegrationApisData._id,userIntegrationID:params.data.UserID,success:"success",error: "",lastTime: new Date(), data: Result.Status,webHook:false};
            var IntegrationApisLogsObj = new conf.IntegrationApisLogs(DataObject);
            IntegrationApisLogsObj.save(function(err,IntegrationApisLogsData) {
                callback(Result);
            });
       // }else{
        //    callback(Result);
        //}
    }catch (err) {       
        callback({Status:ActualCommand+' is not a valid command. In MyBeep, all messages that start with the "/" character are interpreted as commands.If you are trying to send a message and not run a command, try preceding the "/" with an empty space.' });               
    }
}



exports.socketIo = socketIo;